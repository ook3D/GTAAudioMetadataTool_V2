name: Build and Release

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: write

jobs:
  build:
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v2

    - name: Setup dependencies
      run: |
        .\premake5.exe setup-deps
        .\premake5.exe vs2022

    - name: Build Release
      run: |
        msbuild GTAAudioMetadataTool.sln /p:Configuration=Release /p:Platform=x64 /m

    - name: Prepare release artifacts
      run: |
        mkdir release
        copy "bin\Release-windows-x86_64\ivam\ivam.exe" release\
        copy "Hashes.txt" release\
        copy "README.md" release\

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: GTAAudioMetadataTool-${{ github.sha }}
        path: release/

  release:
    needs: build
    runs-on: windows-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: GTAAudioMetadataTool-${{ github.sha }}
        path: release/

    - name: Get commit info
      id: commit
      run: |
        $shortSha = "${{ github.sha }}".Substring(0, 7)
        $commitMsg = git log -1 --pretty=format:"%s"
        echo "short_sha=$shortSha" >> $env:GITHUB_OUTPUT
        echo "commit_message=$commitMsg" >> $env:GITHUB_OUTPUT

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: build-${{ steps.commit.outputs.short_sha }}
        name: "Auto Release - ${{ steps.commit.outputs.short_sha }}"
        body: |
          **Automated release from commit:** ${{ github.sha }}
          
          **Commit message:** ${{ steps.commit.outputs.commit_message }}
          
          **Changes in this release:**
          - Built from latest main branch
          - Includes ivam.exe (Release build)
          - Includes Hashes.txt and README.md
          
          **Usage:**
          1. Download and extract the release
          2. Place your GTA IV metadata files next to ivam.exe
          3. Run `ivam.exe` to convert binary files to JSON
          4. Run `ivam.exe gen` to convert JSON files back to binary
        files: |
          release/ivam.exe
          release/Hashes.txt
          release/README.md
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}